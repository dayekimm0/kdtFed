자바스크립트

1. 변수 : var / let/ const

2. 자료형 : 원시타입 / 참조타입
- 숫자/문자열/논리형/symbol : "데이터 영역" 바로 값 가져올 수 있음
- 배열/객체/함수/map/set : "데이터 영역"의 주소값 참조 > 객체 변수영역에서 값을 가져올 수 있음
- 변수 안에 있는 값을 복제해서 사용했을 때, 사본의 데이터값이 변경
=> 원본 데이터 값이 같이 변경되는지에 대한 여부 체크 !
- 배열(*literable 객체)을 학습하게 되면, 참조타입 자료만의 독특한 특징

3. 형 변환 :
- typeof 변수명(*식별자)
- 문자 + 숫자 = 문자
- 문자 - 숫자 = 숫자
- toString("1" // undefined(불가)) // String(undefined(변환 가능)) : 문자변환
- Number // parseInt // parseFloat 
- Boolean : 논리형값 변환

4. 연산자 :
- 사칙연산 = +-/*
- % => 나머지 값을 구하는 연산자 (*짝/홀)

1) 산술연산자 : +-/*%
> %는 나머지를 구할 때에는 몫을 정수까지만 연산을 실행한 후 나머지 값을 도출

2) 증감연산자 : ++ // --
> 증감연산자는 피연산자와의 입력위치에 따라서 먼저 연산을 시작할 수도 있고, 나중에 연산을 시작할 수도 있다.

3) 비교연산자 : == === // != !== // < > <= >=

4) 복합대입연산자 : +=  // -= // *= ///= // %=

5) 논리연산자 : ! // && // || 

6) 연결연산자 : 문자열 + 문자열

7) 삼항 (= 3항) 조건연산자 : 1항 => 조건식 // 2항 => 참 // 3항 => 부정
- 2015년 ES6문법 등장
<-> 제어문 (*반복문 & 조건문) 

자바스크립트 코드가 작성 혹은 생성되는 순간 => 컴퓨터 메모리 공간 => 객체 생성 => 실행 컨텍스트 = execution context

execution context : 개발자가 현재 작성 혹은 생성 변수(식별자)가 어떤 것이 있는지,
실행시켜야 하는 함수는 무엇인지 등등의 정보를 저장해놓고 있음!

execution context => 어떤 코드를 먼저 실행해야하는가에 대한 우선순위를 결정하기 위한 목적

컴퓨터 > 자바스크립트 어떤 곳에서 어떤 방식으로 실행되는지 이해!
컴퓨터 공간 > stack => 쌓다 // heap

call stack : 자바스크립트 명령문을 처리하는 공간
VariableEnvironment : 환경변수 // 현재 실행 컨텍스트 내 변수명, 함수 정보, 실행 컨텍스트 내
특정함수가 호출 혹은 실행되는 순간 해당 함수를 스냅샷의 형태로 저장

Snapshot : 일시정지 사진
Lexical : 사전적인 = "사전"답사

LexicalEnvironment : 초기에는 VariableEnvironment와 동일한 값으로 시작하지만,
특정함수를 호출하면 해당 함수가 실시간 처리를 하고 있는 상태를 바로 반영해줌

EnvironmentRecord : 현재 실행하고자 하는 코드들 내부에 저장되어 있는 정보값을 가지고 있음

outer-EnvironmentReference : 현재 실행하고자 하는 코드들이 외부에 영향을 받고 있는지, 받고있다면
누구의 영향을 받는지를 확인할 수 있는 정보값을 가지고 있음

ThisBinding : 현재 변수 || 식별자가 가리켜야 하는 대상 객체가 누구인지에 대한 정보값을 가지고 있음

호이스팅 Hoisting -> 무언가를 끌어올리다


Grid : 사전 몇 행 몇 열로 서비스를 만들것인가? 명확 & 수정 및 변경 최소화

fraction : 파편 || 조각
1fr n/m 으로 나눠갖기

grid-template-columns : 몇 개의 열을 만들것인가
grid-template-rows :  몇 개의 행을 만들것인가

grid : grid-template-rows / grid-template-columns
justify-content : auto VS 1fr
align-content
justify-items : start / center / end
align-items : start / center / end
text-align: center


